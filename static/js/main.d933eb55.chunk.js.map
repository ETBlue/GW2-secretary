{"version":3,"sources":["pages/items/styles/Items.module.css","contexts/TokenContext.tsx","helpers/api.ts","config.ts","contexts/ItemContext.tsx","contexts/CharacterContext.tsx","blocks/Header.tsx","layouts/BaseFrame.tsx","helpers/url.ts","hooks/url.ts","pages/characters/Overview.tsx","pages/characters/Characters.tsx","pages/characters/index.ts","components/Pagination.tsx","pages/items/helpers/count.ts","pages/items/SubMenuItem.tsx","pages/items/HeaderItem.tsx","pages/items/Item.tsx","pages/items/Items.tsx","pages/items/index.ts","pages/settings/Settings.tsx","pages/settings/index.ts","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx","pages/items/styles/Item.module.css","pages/characters/styles/Characters.module.css","pages/items/styles/HeaderItem.module.css"],"names":["module","exports","TokenContext","createContext","usedAccounts","addUsedAccount","account","removeUsedAccount","currentAccount","setCurrentAccount","TokenProvider","props","useState","getUsedAccounts","setUsedAccounts","updateUsedAccounts","newUsedAccounts","localStorage","setItem","JSON","stringify","Provider","value","newToken","find","item","token","abandonedToken","filter","length","children","storedTokens","readStoredTokens","v1StoredTokens","readV1StoredTokens","removeItem","storage","getItem","parse","err","console","log","v1Storage","v1Data","Object","keys","map","name","description","queryFunction","context","a","queryKey","endpoint","paramsString","searchParams","URLSearchParams","append","queryString","toString","fetchGW2","data","fetch","headers","res","ok","json","ItemContext","items","characterItems","setCharacterItems","val","isFetching","ItemProvider","useReducer","currentItems","newItems","id","addItems","setIsFetching","fetchItems","newIds","existingIdSet","Set","idsToFetch","has","chunks","chunk","join","useEffect","CharacterContext","characters","undefined","CharacterProvider","useContext","useQuery","staleTime","Infinity","enabled","character","bagItems","bags","reduce","prev","bag","currentBag","location","isEquipped","currentBagItems","inventory","equippedItems","equipment","MENU_ITEMS","to","text","Header","templateColumns","gap","padding","alignContent","alignItems","borderBottom","fontFamily","as","Link","marginRight","height","marginBottom","alt","src","justifyContent","NavLink","variant","fontWeight","borderRadius","_hover","background","activeStyle","color","cursor","Button","paddin","rightIcon","position","top","icon","onClick","BaseFrame","templateRows","getQueryString","newKey","newValue","current","currentSearchParams","set","entries","key","delete","useSearchParams","useLocation","search","sort","get","order","profession","keyword","type","Overview","activeSort","activeOrder","className","css","table","COLUMNS","title","active","column","formatDistanceStrict","age","unit","Gender","gender","format","Date","created","component","Characters","history","useHistory","activeProfession","visibleCharacters","match","RegExp","b","display","gridTemplateRows","width","opacity","onChange","e","currentTarget","push","margin","columns","PROFESSIONS","isActive","size","Component","path","Pagination","pageIndex","setPageIndex","pages","ButtonGroup","isAttached","marginTop","borderBottomWidth","aria-label","index","getTypedItemLength","types","userItems","characterItem","itemRaw","includes","ItemHeader","activeType","showOnly","pathname","HeaderItem","Item","iconCell","rarity","toLowerCase","border","nameCell","secondary","details","infix_upgrade","attributes","attr","attribute","modifier","stats","maxWidth","level","restrictions","minWidth","bound_to","count","chat_link","Items","isItemsFetching","isCharactersFetching","category","useParams","allItems","visibleItems","menuItem","_a","_b","SubMenuItem","Settings","setToken","refetch","handleSubmit","textAlign","fontSize","handleDelete","autoFocus","placeholder","isLoading","queryClient","QueryClient","Content","App","QueryClientProvider","client","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d933eb55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Items_table__W9AWp\"};","import React, { useState, createContext } from \"react\"\n\nexport interface UsedAccount {\n  name: string\n  token: string\n  description?: string\n}\n\nconst TokenContext = createContext({\n  usedAccounts: [],\n  addUsedAccount: (account: UsedAccount) => {},\n  removeUsedAccount: (account: UsedAccount) => {},\n  currentAccount: null,\n  setCurrentAccount: (account: UsedAccount | null) => {},\n})\n\nfunction TokenProvider(props: { children: React.ReactNode }) {\n  const [usedAccounts, setUsedAccounts] = useState<UsedAccount[]>(\n    getUsedAccounts(),\n  )\n  const [currentAccount, setCurrentAccount] = useState<UsedAccount | null>(null)\n\n  const updateUsedAccounts = (newUsedAccounts: UsedAccount[]) => {\n    localStorage.setItem(\"gw2iTokens\", JSON.stringify(newUsedAccounts))\n    setUsedAccounts(newUsedAccounts)\n  }\n\n  const addUsedAccount = (newToken: UsedAccount) => {\n    if (usedAccounts.find((item) => item.token === newToken.token)) {\n      return\n    }\n    if (!newToken.token) {\n      return\n    }\n    const newUsedAccounts = [newToken, ...usedAccounts]\n    updateUsedAccounts(newUsedAccounts)\n  }\n\n  const removeUsedAccount = (abandonedToken: UsedAccount) => {\n    const newUsedAccounts = usedAccounts.filter(\n      (item) => item.token !== abandonedToken.token,\n    )\n    if (newUsedAccounts.length === usedAccounts.length) {\n      return\n    }\n    updateUsedAccounts(newUsedAccounts)\n  }\n\n  return (\n    <TokenContext.Provider\n      value={{\n        usedAccounts,\n        addUsedAccount,\n        removeUsedAccount,\n        currentAccount,\n        setCurrentAccount,\n      }}\n    >\n      {props.children}\n    </TokenContext.Provider>\n  )\n}\n\nexport default TokenContext\nexport { TokenProvider }\n\nconst getUsedAccounts = () => {\n  const storedTokens: UsedAccount[] = readStoredTokens()\n  const v1StoredTokens: UsedAccount[] = readV1StoredTokens()\n  const usedAccounts: UsedAccount[] = [\n    ...storedTokens,\n    ...v1StoredTokens,\n  ].filter((item) => item.token)\n  if (v1StoredTokens.length > 0) {\n    localStorage.setItem(\"gw2iTokens\", JSON.stringify(usedAccounts))\n    localStorage.removeItem(\"gw2i\")\n  }\n  return usedAccounts\n}\n\nconst readStoredTokens = () => {\n  const storage = localStorage.getItem(\"gw2iTokens\")\n  if (storage) {\n    try {\n      const data = JSON.parse(storage)\n      return data\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  return []\n}\n\nconst readV1StoredTokens = () => {\n  const v1Storage = localStorage.getItem(\"gw2i\")\n  if (v1Storage) {\n    try {\n      const v1Data: { [key: string]: string } = JSON.parse(v1Storage)\n      const v1UsedAccounts = Object.keys(v1Data).map((name: string) => {\n        return {\n          name,\n          token: v1Data[name],\n          description: \"\",\n        }\n      })\n      return v1UsedAccounts\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  return []\n}\n","import { QueryFunctionContext } from \"react-query\"\n\nimport { API_URL, API_LANG } from \"config\"\n\nexport const queryFunction = async (context: QueryFunctionContext) => {\n  const { queryKey } = context\n  const [endpoint, token = \"\", paramsString = \"\"] = queryKey\n  if (!endpoint) return\n\n  const searchParams = new URLSearchParams(paramsString)\n  searchParams.append(\"access_token\", token)\n  const queryString = searchParams.toString()\n\n  const data = await fetchGW2(endpoint, queryString)\n  return data\n}\n\nexport const fetchGW2 = async (endpoint: string, queryString?: string) => {\n  const res = await fetch(`${API_URL}/${endpoint}?${queryString}`, {\n    headers: {\n      \"Accept-Language\": API_LANG,\n    },\n  })\n  if (res.ok) {\n    const data = await res.json()\n    return data\n  }\n}\n","export const APP_NAME = \"Guild Wars 2 Inventory\"\n\nexport const API_URL = \"https://api.guildwars2.com/v2\"\n\nexport const API_LANG = \"en\"\n\nexport const BASE_URL = \"/gw2inventory\"\n\nexport const LOCAL_STORAGE_KEYS = {\n  legacy: \"gw2i\",\n  tokens: \"gw2iTokens\",\n}\n\nexport const ITEM_COUNT_PER_PAGE = 100\n\nexport const DATE_FORMAT = \"YYYY-MM-DD HH:mm:ss\"\n","import React, { useEffect, useReducer, createContext } from \"react\"\nimport { chunk } from \"lodash\"\n\nimport { Item } from \"pages/items/types\"\nimport { CharacterItemInList } from \"pages/characters/types\"\nimport { useState } from \"react\"\nimport { fetchGW2 } from \"helpers/api\"\n\nconst ItemContext = createContext({\n  items: {},\n  characterItems: [],\n  setCharacterItems: (val: CharacterItemInList[]) => {},\n  isFetching: false,\n})\n\ninterface Items {\n  [key: string]: Item\n}\n\nfunction ItemProvider(props: { children: React.ReactNode }) {\n  const [items, addItems] = useReducer(\n    (currentItems: Items, newItems: Item[]) => {\n      for (const item of newItems) {\n        currentItems[item.id] = item\n      }\n      return { ...currentItems }\n    },\n    {},\n  )\n\n  const [isFetching, setIsFetching] = useState<boolean>(false)\n\n  const fetchItems = async (newIds: string[]) => {\n    setIsFetching(true)\n    const existingIdSet = new Set(Object.keys(items))\n    const idsToFetch = newIds.filter((id) => !existingIdSet.has(id))\n    const chunks = chunk(idsToFetch, 200)\n\n    let newItems: Item[] = []\n    for (const chunk of chunks) {\n      const data = await fetchGW2(\"items\", `ids=${chunk.join(\",\")}`)\n      if (data) {\n        newItems = [...newItems, ...data]\n      }\n    }\n    setIsFetching(false)\n    addItems(newItems)\n  }\n\n  const [characterItems, setCharacterItems] = useState<CharacterItemInList[]>(\n    [],\n  )\n\n  useEffect(() => {\n    fetchItems(characterItems.map((item) => item.id?.toString()))\n  }, [characterItems.length])\n\n  return (\n    <ItemContext.Provider\n      value={{ items, characterItems, setCharacterItems, isFetching }}\n    >\n      {props.children}\n    </ItemContext.Provider>\n  )\n}\n\nexport default ItemContext\nexport { ItemProvider }\n","import React, { useEffect, useContext, createContext } from \"react\"\nimport { useQuery } from \"react-query\"\n\nimport TokenContext from \"contexts/TokenContext\"\nimport ItemContext from \"contexts/ItemContext\"\nimport { queryFunction } from \"helpers/api\"\nimport { CharacterBag, CharacterItemInList } from \"pages/characters/types\"\n\nconst CharacterContext = createContext({\n  characters: undefined,\n  isFetching: false,\n})\n\nfunction CharacterProvider(props: { children: React.ReactNode }) {\n  const { currentAccount } = useContext(TokenContext)\n  const { setCharacterItems } = useContext(ItemContext)\n\n  const { data: characters, isFetching } = useQuery(\n    [\"characters\", currentAccount?.token, \"ids=all\"],\n    queryFunction,\n    {\n      staleTime: Infinity,\n      enabled: !!currentAccount?.token,\n    },\n  )\n\n  useEffect(() => {\n    if (!characters) return\n    let characterItems: CharacterItemInList[] = []\n\n    for (const character of characters) {\n      const bagItems = character.bags.reduce(\n        (prev: CharacterItemInList[], bag: CharacterBag | null) => {\n          if (!bag) return prev\n          const currentBag = {\n            ...bag,\n            location: character.name,\n            isEquipped: true,\n          }\n          const currentBagItems = bag.inventory.map((item) => {\n            if (item) {\n              return { ...item, location: character.name }\n            }\n          })\n          return [\n            ...prev,\n            currentBag,\n            ...currentBagItems.filter((item) => !!item),\n          ]\n        },\n        [],\n      )\n      const equippedItems = character.equipment.map((item) => {\n        return {\n          ...item,\n          location: character.name,\n          isEquipped: true,\n        }\n      })\n      characterItems = [...characterItems, ...bagItems, ...equippedItems]\n    }\n    setCharacterItems(characterItems)\n  }, [characters?.length])\n\n  return (\n    <CharacterContext.Provider value={{ characters, isFetching }}>\n      {props.children}\n    </CharacterContext.Provider>\n  )\n}\n\nexport default CharacterContext\nexport { CharacterProvider }\n","import React, { useContext } from \"react\"\nimport { Link, NavLink } from \"react-router-dom\"\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Button,\n  SimpleGrid,\n  Flex,\n  Image,\n} from \"@chakra-ui/react\"\nimport { FaCog, FaUser } from \"react-icons/fa\"\nimport { MdExpandMore } from \"react-icons/md\"\n\nimport { APP_NAME, BASE_URL } from \"config\"\nimport TokenContext, { UsedAccount } from \"contexts/TokenContext\"\n\nconst MENU_ITEMS = [\n  // { to: \"/account\", text: \"Account\" },\n  { to: \"/characters\", text: \"Characters\" },\n  { to: \"/items\", text: \"Items\" },\n  // { to: \"/unlocks\", text: \"Unlocks\" },\n  // { to: \"/trades\", text: \"Trades\" },\n  // { to: \"/wallet\", text: \"Wallet\" },\n]\n\nfunction Header() {\n  const { usedAccounts, currentAccount, setCurrentAccount } =\n    useContext(TokenContext)\n\n  return (\n    <SimpleGrid\n      templateColumns=\"auto 1fr auto\"\n      gap=\"1rem\"\n      padding=\"0 1rem\"\n      alignContent=\"stretch\"\n      alignItems=\"stretch\"\n      borderBottom=\"2px hsla(326, 73%, 55%, 1) solid\"\n      fontFamily=\"Rosario\"\n    >\n      <Flex\n        as={Link}\n        alignItems=\"center\"\n        borderBottom=\"2px hsla(326, 73%, 55%, 1) solid\"\n        to=\"/\"\n      >\n        <Image\n          marginRight=\"1rem\"\n          height=\"3.5rem\"\n          marginBottom=\"-2px\"\n          alt=\"logo\"\n          src={`${BASE_URL}/favicon.png`}\n        />\n        {APP_NAME}\n      </Flex>\n      <Flex as=\"nav\" justifyContent=\"center\">\n        {MENU_ITEMS.map((item) => (\n          <Button\n            key={item.to}\n            as={NavLink}\n            to={item.to}\n            variant=\"ghost\"\n            fontWeight=\"normal\"\n            borderRadius=\"0\"\n            height=\"3.5rem\"\n            borderBottom=\"2px hsla(326, 73%, 55%, 1) solid\"\n            _hover={{ background: \"hsla(326, 15%, 55%, 0.1)\" }}\n            activeStyle={{\n              background: \"hsla(326, 73%, 55%, 1)\",\n              color: \"#f9f9f9\",\n              cursor: \"initial\",\n            }}\n          >\n            {item.text}\n          </Button>\n        ))}\n      </Flex>\n      <Menu>\n        <MenuButton\n          as={Button}\n          variant=\"ghost\"\n          fontWeight=\"normal\"\n          borderRadius=\"0\"\n          height=\"100%\"\n          paddin=\"1rem\"\n          marginRight=\"-0.5rem\"\n          borderBottom=\"2px hsla(326, 73%, 55%, 1) solid\"\n          rightIcon={<MdExpandMore />}\n        >\n          {currentAccount?.name || \"Select a token\"}\n        </MenuButton>\n        <MenuList borderRadius=\"0\" position=\"relative\" top=\"-0.75rem\">\n          {usedAccounts.map((item: UsedAccount) => (\n            <MenuItem\n              key={item.token}\n              icon={<FaUser />}\n              onClick={() => {\n                setCurrentAccount(item)\n              }}\n            >\n              {item.name}\n            </MenuItem>\n          ))}\n          <MenuItem as={Link} to=\"/settings\" icon={<FaCog />}>\n            Manage tokens...\n          </MenuItem>\n        </MenuList>\n      </Menu>\n    </SimpleGrid>\n  )\n}\n\nexport default Header\n","import React from \"react\"\n\nimport Header from \"blocks/Header\"\n\nimport { Box, Grid } from \"@chakra-ui/react\"\n\ninterface Props {\n  children?: React.ReactNode\n}\n\nfunction BaseFrame(props: Props) {\n  const { children } = props\n\n  return (\n    <Grid templateRows=\"auto 3.5rem 1fr\" height=\"100vh\">\n      <div />\n      <Header />\n      <Box background=\"hsla(50, 30%, 98%, 1)\" padding=\"1rem\">\n        {children}\n      </Box>\n    </Grid>\n  )\n}\n\nexport default BaseFrame\n","export const getQueryString = (\n  newKey: string,\n  newValue: string,\n  current: string,\n) => {\n  const currentSearchParams = new URLSearchParams(current)\n  currentSearchParams.set(newKey, newValue)\n  for (const [key, value] of currentSearchParams.entries()) {\n    if (!value || value === \"All\") {\n      currentSearchParams.delete(key)\n    }\n  }\n  return currentSearchParams.toString()\n}\n","import { useLocation } from \"react-router-dom\"\n\nexport const useSearchParams = () => {\n  const { search: queryString } = useLocation()\n  const searchParams = new URLSearchParams(queryString)\n  const sort = searchParams.get(\"sort\")\n  const order = searchParams.get(\"order\")\n  const profession = searchParams.get(\"profession\")\n  const keyword = searchParams.get(\"keyword\")\n  const type = searchParams.get(\"type\")\n\n  return { queryString, sort, order, profession, keyword, type }\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { format, formatDistanceStrict } from \"date-fns\"\nimport { GiFemale, GiMale } from \"react-icons/gi\"\nimport { CgArrowDown, CgArrowUp } from \"react-icons/cg\"\nimport { Table, Thead, Tbody, Tr, Th, Td } from \"@chakra-ui/react\"\n\nimport { getQueryString } from \"helpers/url\"\n\nimport { Character } from \"./types\"\nimport css from \"./styles/Characters.module.css\"\n\ninterface Props {\n  characters: Character[]\n  token: string\n  activeSort: string\n  activeOrder: string\n  queryString: string\n}\n\nfunction Overview(props: Props) {\n  const { characters, activeSort, activeOrder, queryString } = props\n  return (\n    <Table className={css.table}>\n      <Thead>\n        <Tr>\n          {COLUMNS.map((title) => (\n            <Th\n              key={title}\n              as={Link}\n              to={`/characters?${\n                activeSort === title\n                  ? getQueryString(\n                      \"order\",\n                      activeOrder === \"asc\" ? \"dsc\" : \"\",\n                      queryString,\n                    )\n                  : getQueryString(\"sort\", title, queryString)\n              }`}\n              className={`${css.title} ${\n                activeSort === title ? css.active : \"\"\n              }`}\n            >\n              {title}{\" \"}\n              {activeSort === title ? (\n                activeOrder === \"asc\" ? (\n                  <CgArrowDown />\n                ) : (\n                  <CgArrowUp />\n                )\n              ) : null}\n            </Th>\n          ))}\n        </Tr>\n      </Thead>\n      <Tbody>\n        {characters.map((character) => (\n          <Tr key={character.name}>\n            {COLUMNS.map((column) => (\n              <Td key={column}>\n                {column === \"age\" ? (\n                  formatDistanceStrict(0, character.age * 1000, {\n                    unit: \"hour\",\n                  })\n                ) : column === \"gender\" ? (\n                  <Gender gender={character.gender} />\n                ) : column === \"created\" ? (\n                  format(new Date(character.created), \"yyyy-MM-dd\")\n                ) : (\n                  character[column]\n                )}\n              </Td>\n            ))}\n          </Tr>\n        ))}\n      </Tbody>\n    </Table>\n  )\n}\n\nexport default Overview\n\nconst COLUMNS = [\n  \"name\",\n  \"gender\",\n  \"race\",\n  \"profession\",\n  \"level\",\n  \"age\",\n  \"created\",\n  \"deaths\",\n]\n\nfunction Gender(props: { gender: string }) {\n  const { gender } = props\n  if (gender === \"Female\") {\n    return <GiFemale />\n  } else {\n    return <GiMale />\n  }\n}\n\n//\"crafting\",\n//backstory: string[] // An array of strings representing backstory answer IDs pertaining to the questions answered during character creation. References /v2/backstory/answers.\n//skills: {\n//  pve: Skills // contains the information on each slotted utility for PvE\n//  pvp: Skills // contains the information on each slotted utility for PvP\n//  wvw: Skills // contains the information on each slotted utility for WvW\n//} // contains the pve, pvp, and wvw objects for the current utilities equipped.\n//specializations: {\n//  pve: Spec[] // contains the information on each slotted specialization and trait for PvE\n//  pvp: Spec[] // contains the information on each slotted specialization and trait for PvP\n//  wvw: Spec[] // contains the information on each slotted specialization and trait for WvW\n//} // contains the pve, pvp, and wvw objects for the current specializations and traits equipped.\n//training: Training[] // contains objects for each skill tree trained\n//wvw_abilities: WvW[] // contains information on each trained wvw ability\n//equipment_pvp: PvP // Contains information on character's pvp equipment setup.\n//flags: \"Beta\"[] // Returns character flags. Possible values: Beta - Beta character for testing period of add-ons\n//recipes: number[] // The endpoi\n","import React, { useEffect, useContext } from \"react\"\nimport { Link, NavLink, Route, Switch, useHistory } from \"react-router-dom\"\nimport { MdSearch } from \"react-icons/md\"\nimport {\n  Tabs,\n  TabList,\n  Tab,\n  Center,\n  Spinner,\n  Button,\n  Tag,\n  Flex,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Spacer,\n} from \"@chakra-ui/react\"\n\nimport TokenContext from \"contexts/TokenContext\"\nimport CharacterContext from \"contexts/CharacterContext\"\n\nimport { getQueryString } from \"helpers/url\"\nimport { useSearchParams } from \"hooks/url\"\nimport { Character } from \"pages/characters/types\"\n\nimport Overview from \"./Overview\"\n\nconst MENU_ITEMS = [\n  { to: \"/characters\", text: \"Overview\", component: Overview },\n]\n\nfunction Characters() {\n  const { currentAccount } = useContext(TokenContext)\n  const { characters, isFetching } = useContext(CharacterContext)\n  const history = useHistory()\n\n  const {\n    queryString,\n    profession: activeProfession,\n    keyword,\n    sort,\n    order,\n  } = useSearchParams()\n  const activeSort = sort || \"name\"\n  const activeOrder = order || \"asc\"\n\n  const visibleCharacters = characters\n    ?.filter(\n      (character: Character) =>\n        character.profession === activeProfession || !activeProfession,\n    )\n    .filter((character: Character) =>\n      !!keyword\n        ? JSON.stringify(character).match(new RegExp(keyword, \"i\"))\n        : true,\n    )\n    .sort((a, b) => {\n      if (a[activeSort] > b[activeSort] && activeOrder === \"asc\") return 1\n      if (a[activeSort] < b[activeSort] && activeOrder === \"dsc\") return 1\n      if (a[activeSort] > b[activeSort] && activeOrder === \"dsc\") return -1\n      if (a[activeSort] < b[activeSort] && activeOrder === \"asc\") return -1\n      return 0\n    })\n\n  return (\n    <Tabs display=\"grid\" gridTemplateRows=\"auto 1fr\" height=\"100%\">\n      <TabList>\n        {MENU_ITEMS.map((item) => (\n          <Tab key={item.to} as={NavLink} to={item.to}>\n            {item.text}\n          </Tab>\n        ))}\n        <Spacer />\n        <InputGroup width=\"20ch\">\n          <InputLeftElement>\n            <MdSearch opacity=\"0.5\" />\n          </InputLeftElement>\n          <Input\n            variant=\"unstyled\"\n            value={keyword || \"\"}\n            onChange={(e) => {\n              const to = `/characters?${getQueryString(\n                \"keyword\",\n                e.currentTarget.value,\n                queryString,\n              )}`\n              history.push(to)\n            }}\n          />\n        </InputGroup>\n      </TabList>\n      {isFetching ? (\n        <Center>\n          <Spinner />\n        </Center>\n      ) : (\n        <div>\n          <Flex\n            justifyContent=\"center\"\n            margin=\"1rem auto\"\n            columns={PROFESSIONS.length}\n          >\n            <Button\n              as={Link}\n              variant=\"ghost\"\n              fontWeight=\"normal\"\n              isActive={!activeProfession}\n              to={`/characters?${getQueryString(\n                \"profession\",\n                \"\",\n                queryString,\n              )}`}\n            >\n              All\n              <Tag size=\"sm\" margin=\"0 0 -0.1em 0.5em\">\n                {characters?.length || \"0\"}\n              </Tag>\n            </Button>{\" \"}\n            {PROFESSIONS.map((profession) => (\n              <Button\n                key={profession}\n                as={Link}\n                variant=\"ghost\"\n                fontWeight=\"normal\"\n                isActive={activeProfession === profession}\n                to={`/characters?${getQueryString(\n                  \"profession\",\n                  profession,\n                  queryString,\n                )}`}\n              >\n                {profession}{\" \"}\n                <Tag size=\"sm\" margin=\"0 0 -0.1em 0.5em\">\n                  {characters?.filter(\n                    (character: Character) =>\n                      character.profession === profession ||\n                      profession === \"All\",\n                  ).length || \"0\"}\n                </Tag>\n              </Button>\n            ))}\n          </Flex>\n          <Switch>\n            {currentAccount &&\n              characters &&\n              MENU_ITEMS.map((item) => {\n                const Component = item.component\n                return (\n                  <Route key={item.to} path={item.to}>\n                    <Component\n                      characters={visibleCharacters}\n                      token={currentAccount.token}\n                      activeSort={activeSort}\n                      activeOrder={activeOrder}\n                      queryString={queryString}\n                    />\n                  </Route>\n                )\n              })}\n          </Switch>\n        </div>\n      )}\n    </Tabs>\n  )\n}\n\nexport default Characters\n\nconst PROFESSIONS = [\n  \"Elementalist\",\n  \"Necromancer\",\n  \"Mesmer\",\n  \"Ranger\",\n  \"Thief\",\n  \"Engineer\",\n  \"Warrior\",\n  \"Guardian\",\n  \"Revenant\",\n]\n","import Characters from \"./Characters\"\n\nexport default Characters\n","import React from \"react\"\nimport {\n  CgChevronDoubleLeft,\n  CgChevronDoubleRight,\n  CgChevronLeft,\n  CgChevronRight,\n} from \"react-icons/cg\"\nimport { Flex, Button, ButtonGroup, IconButton } from \"@chakra-ui/react\"\n\nimport { CharacterItemInList } from \"pages/characters/types\"\n\ninterface Props {\n  pageIndex: number\n  setPageIndex: (index: number) => void\n  pages: CharacterItemInList[][]\n}\n\nfunction Pagination(props: Props) {\n  const { pageIndex, setPageIndex, pages } = props\n  return (\n    <Flex\n      as={ButtonGroup}\n      isAttached\n      variant=\"ghost\"\n      marginTop=\"1rem\"\n      borderBottomWidth=\"1px\"\n      justifyContent=\"center\"\n    >\n      <IconButton\n        aria-label=\"first page\"\n        onClick={() => {\n          setPageIndex(0)\n        }}\n      >\n        <CgChevronDoubleLeft />\n      </IconButton>\n      <IconButton\n        aria-label=\"previous page\"\n        onClick={() => {\n          setPageIndex(pageIndex - 1 || 0)\n        }}\n      >\n        <CgChevronLeft />\n      </IconButton>\n      {pages.map((chunk, index: number) => (\n        <Button\n          key={index}\n          fontWeight=\"normal\"\n          isActive={index === pageIndex}\n          onClick={() => {\n            setPageIndex(index)\n          }}\n        >\n          {index + 1}\n        </Button>\n      ))}\n      <IconButton\n        aria-label=\"next page\"\n        onClick={() => {\n          setPageIndex(\n            pageIndex < pages.length - 1 ? pageIndex + 1 : pages.length,\n          )\n        }}\n      >\n        <CgChevronRight />\n      </IconButton>\n      <IconButton\n        aria-label=\"last page\"\n        onClick={() => {\n          setPageIndex(pages.length - 1)\n        }}\n      >\n        <CgChevronDoubleRight />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default Pagination\n","import { CharacterItemInList } from \"pages/characters/types\"\nimport { Item } from \"pages/items/types\"\n\nexport const getTypedItemLength = (\n  types: string[],\n  userItems: CharacterItemInList[],\n  items: Item[],\n): number => {\n  if (!userItems || !items) return 0\n\n  const typedItems = userItems.filter((characterItem: CharacterItemInList) => {\n    const itemRaw: Item = items[characterItem.id]\n    return types.includes(itemRaw?.type)\n  })\n  return typedItems.length\n}\n","import React from \"react\"\nimport { Link, useLocation } from \"react-router-dom\"\nimport { Tag, Flex, Button } from \"@chakra-ui/react\"\n\nimport { useSearchParams } from \"hooks/url\"\nimport { getQueryString } from \"helpers/url\"\nimport { CharacterItemInList } from \"pages/characters/types\"\n\nimport { MenuItem } from \"./Items\"\nimport { getTypedItemLength } from \"./helpers/count\"\nimport { Item } from \"./types\"\n\ninterface Props {\n  activeType: string | null\n  showOnly: MenuItem[\"showOnly\"]\n  characterItems: CharacterItemInList[]\n  items: Item[]\n}\n\nfunction ItemHeader(props: Props) {\n  const { activeType, showOnly, characterItems, items } = props\n  const { pathname } = useLocation()\n  const { queryString } = useSearchParams()\n\n  return (\n    <Flex justifyContent=\"center\" margin=\"1rem auto\" columns={showOnly.length}>\n      {showOnly.map((type) => (\n        <Button\n          key={type}\n          as={Link}\n          variant=\"ghost\"\n          fontWeight=\"normal\"\n          isActive={type === activeType}\n          to={`${pathname}?${getQueryString(\"type\", type, queryString)}`}\n        >\n          {type}{\" \"}\n          <Tag size=\"sm\" margin=\"0 0 -0.1em 0.5em\">\n            {getTypedItemLength([type], characterItems, items)}\n          </Tag>\n        </Button>\n      ))}\n    </Flex>\n  )\n}\n\nexport default ItemHeader\n","import React from \"react\"\nimport { Link, useLocation } from \"react-router-dom\"\nimport { Tr, Th } from \"@chakra-ui/react\"\nimport { CgArrowDown, CgArrowUp } from \"react-icons/cg\"\n\nimport { useSearchParams } from \"hooks/url\"\nimport { getQueryString } from \"helpers/url\"\n\nimport css from \"./styles/HeaderItem.module.css\"\n\ninterface Props {\n  activeSort: string\n  activeOrder: string\n}\n\nfunction HeaderItem(props: Props) {\n  const { activeSort, activeOrder } = props\n  const { pathname } = useLocation()\n  const { queryString } = useSearchParams()\n\n  return (\n    <Tr>\n      {[\n        \"rarity\",\n        \"name\",\n        \"type\",\n        \"level\",\n        \"location\",\n        \"count\",\n        \"chat_link\",\n      ].map((title) => (\n        <Th\n          key={title}\n          as={Link}\n          to={`${pathname}?${\n            activeSort === title\n              ? getQueryString(\n                  \"order\",\n                  activeOrder === \"asc\" ? \"dsc\" : \"\",\n                  queryString,\n                )\n              : getQueryString(\"sort\", title, queryString)\n          }`}\n          className={`${css.title} ${activeSort === title ? css.active : \"\"}`}\n        >\n          {title}{\" \"}\n          {activeSort === title ? (\n            activeOrder === \"asc\" ? (\n              <CgArrowDown />\n            ) : (\n              <CgArrowUp />\n            )\n          ) : null}\n        </Th>\n      ))}\n    </Tr>\n  )\n}\n\nexport default HeaderItem\n","import React from \"react\"\nimport { Td, Tr, Image, Heading, Tag, Code, Badge, Box } from \"@chakra-ui/react\"\nimport { BsQuestionOctagonFill } from \"react-icons/bs\"\n\nimport { CharacterItemInList } from \"pages/characters/types\"\nimport { InfixUpgradeAttributes, Item as ItemDef } from \"./types\"\n\nimport css from \"./styles/Item.module.css\"\n\ninterface Props {\n  item: ItemDef\n  characterItem: CharacterItemInList\n}\n\nfunction Item(props: Props) {\n  const { item, characterItem } = props\n  return (\n    <Tr>\n      <Td className={css.iconCell}>\n        {item ? (\n          <Image\n            src={item.icon}\n            alt={item.rarity}\n            className={`${css.icon} ${css[item.rarity.toLowerCase()]}`}\n            border=\"5px yellow solid\"\n          />\n        ) : (\n          <BsQuestionOctagonFill size=\"3.5rem\" />\n        )}\n      </Td>\n      <Td className={css.nameCell}>\n        {item ? (\n          <>\n            <Heading\n              as=\"h4\"\n              size=\"sm\"\n              className={`${css.name} ${css[item?.rarity.toLowerCase()]}`}\n            >\n              {item.name}\n            </Heading>\n            {item.description && (\n              <p className={`${css.description} ${css.secondary}`}>\n                {item.description}\n              </p>\n            )}\n            {item.details?.description && (\n              <p className={`${css.description} ${css.secondary}`}>\n                {item.details.description}\n              </p>\n            )}\n            {item.details?.infix_upgrade && (\n              <p className={`${css.description} ${css.secondary}`}>\n                {item.details.infix_upgrade.attributes.map(\n                  (attr: InfixUpgradeAttributes) => (\n                    <Box as=\"span\" key={attr.attribute} marginRight=\"0.5rem\">\n                      <Tag size=\"sm\">{attr.attribute}</Tag> {attr.modifier}\n                    </Box>\n                  ),\n                )}\n              </p>\n            )}\n            {characterItem.stats && (\n              <p className={`${css.description} ${css.secondary}`}>\n                {Object.keys(characterItem.stats.attributes).map((attr) => (\n                  <Box key={attr} marginRight=\"0.5rem\" as=\"span\">\n                    <Tag variant=\"outline\" size=\"sm\">\n                      {attr}\n                    </Tag>{\" \"}\n                    {characterItem.stats.attributes[attr]}\n                  </Box>\n                ))}\n              </p>\n            )}\n          </>\n        ) : (\n          <>\n            Item not exists in Guild Wars 2 API. ID:{\" \"}\n            <Code>{characterItem.id}</Code>\n          </>\n        )}\n      </Td>\n      <Td maxWidth=\"12rem\">\n        {item?.type}\n        <div className={css.secondary}>{item?.details?.type}</div>\n      </Td>\n      <Td maxWidth=\"6rem\">\n        {item && (\n          <>\n            {item.level}\n            <div className={css.secondary}>\n              {item && item.restrictions.join(\",\")}\n            </div>\n          </>\n        )}\n      </Td>\n      <Td minWidth=\"12rem\">\n        {characterItem.location}{\" \"}\n        {characterItem.isEquipped && (\n          <Badge size=\"sm\" fontWeight=\"normal\">\n            Equipped\n          </Badge>\n        )}\n        {characterItem.bound_to && (\n          <div className={css.secondary}>bound to {characterItem.bound_to}</div>\n        )}\n      </Td>\n      <Td maxWidth=\"6rem\">{characterItem?.count}</Td>\n      <Td maxWidth=\"10rem\">\n        {item && <Code className={css.secondary}>{item.chat_link}</Code>}\n      </Td>\n    </Tr>\n  )\n}\n\nexport default Item\n","import React, { useState, useContext } from \"react\"\nimport {\n  NavLink,\n  Switch,\n  Route,\n  useHistory,\n  useLocation,\n  useParams,\n} from \"react-router-dom\"\nimport { chunk } from \"lodash\"\nimport { MdSearch } from \"react-icons/md\"\nimport {\n  Tabs,\n  TabList,\n  Tab,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Spacer,\n  Table,\n  Thead,\n  Tbody,\n  Tag,\n  Center,\n  Spinner,\n} from \"@chakra-ui/react\"\n\nimport { ITEM_COUNT_PER_PAGE } from \"config\"\nimport ItemContext from \"contexts/ItemContext\"\nimport CharacterContext from \"contexts/CharacterContext\"\nimport { useSearchParams } from \"hooks/url\"\nimport { getQueryString } from \"helpers/url\"\nimport { CharacterItemInList } from \"pages/characters/types\"\nimport Pagination from \"components/Pagination\"\n\nimport SubMenuItem from \"./SubMenuItem\"\nimport HeaderItem from \"./HeaderItem\"\nimport { Item as ItemDef } from \"./types\"\nimport Item from \"./Item\"\nimport { getTypedItemLength } from \"./helpers/count\"\nimport css from \"./styles/Items.module.css\"\n\nfunction Items() {\n  const {\n    items,\n    characterItems,\n    isFetching: isItemsFetching,\n  } = useContext(ItemContext)\n  const { isFetching: isCharactersFetching } = useContext(CharacterContext)\n  const history = useHistory()\n  const { pathname } = useLocation()\n  const { category } = useParams()\n\n  const {\n    queryString,\n    keyword,\n    sort,\n    order,\n    type: activeType,\n  } = useSearchParams()\n  const activeSort = sort || \"location\"\n  const activeOrder = order || \"asc\"\n\n  const allItems = characterItems\n  const visibleItems = allItems\n    .filter((characterItem: CharacterItemInList) => {\n      const itemRaw: ItemDef = items[characterItem.id]\n      if (activeType) {\n        return activeType === itemRaw?.type\n      }\n      if (category) {\n        const activeTypes =\n          MENU_ITEMS.find((menuItem) => menuItem.to === pathname)?.showOnly ||\n          []\n        return activeTypes.includes(itemRaw?.type)\n      }\n      return true\n    })\n    .filter((characterItem: CharacterItemInList) => {\n      if (!keyword) return true\n      const itemRaw: ItemDef = items[characterItem.id]\n      const item = { ...characterItem, ...itemRaw }\n      return JSON.stringify(item).match(new RegExp(keyword, \"i\"))\n    })\n    .sort((_a: CharacterItemInList, _b: CharacterItemInList) => {\n      const a = { ..._a, ...items[_a.id] }\n      const b = { ..._b, ...items[_b.id] }\n      if (a[activeSort] > b[activeSort] && activeOrder === \"asc\") return 1\n      if (a[activeSort] < b[activeSort] && activeOrder === \"dsc\") return 1\n      if (a[activeSort] > b[activeSort] && activeOrder === \"dsc\") return -1\n      if (a[activeSort] < b[activeSort] && activeOrder === \"asc\") return -1\n      return 0\n    })\n\n  const pages = chunk(visibleItems, ITEM_COUNT_PER_PAGE)\n  const [pageIndex, setPageIndex] = useState<number>(0)\n\n  return (\n    <Tabs display=\"grid\" gridTemplateRows=\"auto 1fr\" height=\"100%\">\n      <TabList>\n        <Tab key=\"/items\" as={NavLink} to=\"/items\">\n          All\n          <Tag size=\"sm\" margin=\"0 0 -0.1em 0.5em\">\n            {allItems?.length}\n          </Tag>\n        </Tab>\n        {MENU_ITEMS.map((item) => (\n          <Tab key={item.to} as={NavLink} to={item.to}>\n            {item.text}\n            <Tag size=\"sm\" margin=\"0 0 -0.1em 0.5em\">\n              {getTypedItemLength(item.showOnly, characterItems, items)}\n            </Tag>\n          </Tab>\n        ))}\n        <Spacer />\n        <InputGroup width=\"20ch\">\n          <InputLeftElement>\n            <MdSearch opacity=\"0.5\" />\n          </InputLeftElement>\n          <Input\n            variant=\"unstyled\"\n            value={keyword || \"\"}\n            onChange={(e) => {\n              const to = `${pathname}?${getQueryString(\n                \"keyword\",\n                e.currentTarget.value,\n                queryString,\n              )}`\n              history.push(to)\n            }}\n          />\n        </InputGroup>\n      </TabList>\n      {isItemsFetching || isCharactersFetching ? (\n        <Center>\n          <Spinner />\n        </Center>\n      ) : (\n        <div>\n          <Switch>\n            {MENU_ITEMS.map((menuItem) => (\n              <Route key={menuItem.to} path={menuItem.to}>\n                <SubMenuItem\n                  showOnly={menuItem.showOnly}\n                  activeType={activeType}\n                  characterItems={characterItems}\n                  items={items}\n                />\n              </Route>\n            ))}\n          </Switch>\n          <Pagination\n            pageIndex={pageIndex}\n            setPageIndex={setPageIndex}\n            pages={pages}\n          />\n          <Table className={css.table}>\n            <Thead>\n              <HeaderItem activeSort={activeSort} activeOrder={activeOrder} />\n            </Thead>\n            <Tbody>\n              {pages[pageIndex]?.map(\n                (characterItem: CharacterItemInList, index: number) => {\n                  const item: ItemDef = items[characterItem.id]\n                  return (\n                    <Item\n                      key={index}\n                      item={item}\n                      characterItem={characterItem}\n                    />\n                  )\n                },\n              )}\n            </Tbody>\n          </Table>\n        </div>\n      )}\n    </Tabs>\n  )\n}\n\nexport default Items\n\nexport interface MenuItem {\n  to: string\n  text: string\n  showOnly: string[]\n}\n\nconst MENU_ITEMS: MenuItem[] = [\n  {\n    to: \"/items/equipable\",\n    text: \"Equipable\",\n    showOnly: [\n      \"Armor\",\n      \"Weapon\",\n      \"Back\",\n      \"Trinket\",\n      \"Gathering\",\n      \"UpgradeComponent\",\n      \"Bag\",\n    ],\n  },\n  {\n    to: \"/items/consumable\",\n    text: \"Consumable\",\n    showOnly: [\n      \"Consumable\",\n      \"Container\",\n      \"Gizmo\",\n      \"Key\",\n      \"MiniPet\",\n      \"Tool\",\n      \"Trait\",\n    ],\n  },\n  { to: \"/items/material\", text: \"Material\", showOnly: [\"CraftingMaterial\"] },\n  { to: \"/items/trophy\", text: \"Trophy\", showOnly: [\"Trophy\"] },\n]\n","import Items from \"./Items\"\n\nexport default Items\n","import React, { useState, useContext } from \"react\"\nimport { useQuery } from \"react-query\"\nimport { FaSave, FaTrashAlt } from \"react-icons/fa\"\nimport { Box, Button, Code, Grid, Heading, Input } from \"@chakra-ui/react\"\n\nimport { queryFunction } from \"helpers/api\"\nimport TokenContext, { UsedAccount } from \"contexts/TokenContext\"\nimport ItemContext from \"contexts/ItemContext\"\n\nfunction Settings() {\n  const {\n    currentAccount,\n    usedAccounts,\n    addUsedAccount,\n    removeUsedAccount,\n    setCurrentAccount,\n  } = useContext(TokenContext)\n  const { setCharacterItems } = useContext(ItemContext)\n\n  const handleDelete = (account: UsedAccount) => {\n    removeUsedAccount(account)\n    if (currentAccount?.token === account.token) {\n      setCurrentAccount(null)\n      setCharacterItems([])\n    }\n  }\n\n  const [token, setToken] = useState(\"\")\n\n  const { refetch, isFetching } = useQuery([\"account\", token], queryFunction, {\n    staleTime: Infinity,\n    enabled: false,\n  })\n\n  const handleSubmit = async () => {\n    const { data } = await refetch()\n    if (data) {\n      const account = {\n        name: data.name,\n        token,\n      }\n      addUsedAccount(account)\n      setCurrentAccount(account)\n      setToken(\"\")\n    }\n  }\n\n  return (\n    <Box margin=\"0 auto\" padding=\"1rem\" maxWidth=\"60rem\">\n      <Heading\n        size=\"lg\"\n        textAlign=\"center\"\n        fontFamily=\"Rosario\"\n        marginBottom=\"2rem\"\n      >\n        Manage Tokens in Your Local Storage\n      </Heading>\n      <Grid templateColumns=\"auto 1fr auto\" gap=\"1rem\" alignItems=\"center\">\n        {usedAccounts.map((account: UsedAccount) => {\n          return (\n            <>\n              <Heading\n                size=\"md\"\n                key={account.name}\n                fontWeight=\"normal\"\n                fontFamily=\"Rosario\"\n              >\n                {account.name}\n              </Heading>\n              <Code fontSize=\"sm\" key={account.token}>\n                {account.token}\n              </Code>\n              <Button\n                key={account.token + \" button\"}\n                variant=\"ghost\"\n                onClick={() => {\n                  handleDelete(account)\n                }}\n              >\n                <FaTrashAlt />\n              </Button>\n            </>\n          )\n        })}\n        <div>Add new...</div>\n        <Input\n          autoFocus={true}\n          placeholder=\"paste your token here\"\n          value={token}\n          onChange={(e) => {\n            setToken(e.currentTarget.value)\n          }}\n        />\n        <Button variant=\"ghost\" isLoading={isFetching} onClick={handleSubmit}>\n          <FaSave />\n        </Button>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default Settings\n","import Settings from \"./Settings\"\n\nexport default Settings\n","import React from \"react\"\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\"\nimport { QueryClient, QueryClientProvider } from \"react-query\"\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nimport { TokenProvider } from \"contexts/TokenContext\"\nimport { ItemProvider } from \"contexts/ItemContext\"\nimport { CharacterProvider } from \"contexts/CharacterContext\"\n\nimport BaseFrame from \"layouts/BaseFrame\"\nimport Characters from \"pages/characters\"\nimport Items from \"pages/items\"\nimport Settings from \"pages/settings\"\n\nimport \"./App.css\"\n\nconst queryClient = new QueryClient()\n\nconst Content = () => {\n  return (\n    <BaseFrame>\n      <Switch>\n        <Route path=\"/characters\">\n          <Characters />\n        </Route>\n        <Route path=\"/items/:category?\">\n          <Items />\n        </Route>\n        <Route path=\"/settings\">\n          <Settings />\n        </Route>\n        <Route path=\"/\">\n          <Redirect to=\"/characters\" />\n        </Route>\n      </Switch>\n    </BaseFrame>\n  )\n}\n\nexport const App = () => {\n  return (\n    <ChakraProvider>\n      <QueryClientProvider client={queryClient}>\n        <TokenProvider>\n          <ItemProvider>\n            <CharacterProvider>\n              <Router>\n                <Content />\n              </Router>\n            </CharacterProvider>\n          </ItemProvider>\n        </TokenProvider>\n      </QueryClientProvider>\n    </ChakraProvider>\n  )\n}\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import * as React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport { App } from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconCell\":\"Item_iconCell__20ao9\",\"icon\":\"Item_icon__FvfL8\",\"junk\":\"Item_junk__2Fulf\",\"basic\":\"Item_basic__3iuy0\",\"fine\":\"Item_fine__2DHgw\",\"masterwork\":\"Item_masterwork__30J5-\",\"rare\":\"Item_rare__FoKYL\",\"exotic\":\"Item_exotic__3M3In\",\"ascended\":\"Item_ascended__20bat\",\"legendary\":\"Item_legendary__2tlYn\",\"nameCell\":\"Item_nameCell__J1haS\",\"name\":\"Item_name__2U4rP\",\"description\":\"Item_description__2zDcH\",\"secondary\":\"Item_secondary__2dW75\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Characters_title__3Q3A2\",\"active\":\"Characters_active__1kUhb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HeaderItem_title__2Pegk\",\"active\":\"HeaderItem_active__1GDgd\"};"],"sourceRoot":""}